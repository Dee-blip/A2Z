# Definition for a binary tree node.
# class TreeNode:
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution:
    def zigzagLevelOrder(self, root: Optional[TreeNode]) -> List[List[int]]:
        #use level order traversal
        arr=[]
        q=[]
        if root==None:
            return arr
        q=[root]
        flagLTR= True
        while len(q):
            size=len(q)
            level=[]
            for i in range(size):
                node=q.pop(0)
                level.append(node.val)
                if node.left is not None:
                    q.append(node.left)
                if node.right is not None:
                    q.append(node.right)
            if flagLTR:
                arr.append(level)
            else:
                arr.append(level[::-1])
            flagLTR= not flagLTR
        return arr
        
        

#https://leetcode.com/problems/find-minimum-in-rotated-sorted-array/
import sys
class Solution:
    def findMin(self, nums: List[int]) -> int:

        n=len(nums)

        low=0
        high=n-1

        ans = sys.maxsize
        while low<=high:
            mid=(low+high)//2

            if nums[low]<=nums[mid]<=nums[high]:
                return nums[low]
                break
            # we are here only picking the lowest from the sorted array, rest we are eliminating.
            if nums[low]<=nums[mid]:
                ans=min(ans,nums[low])
                print(ans)
                print(low)
                low=mid+1
                print(low)
            
            else:
                ans=min(ans,nums[high])
                high=mid-1
        
        return ans


        
